// let col = ["one", "two", "three", "four"];
// let gamesq = []; // Sequence generated by the game
// let mysq = [];   // Sequence entered by the user
// let start = false;
// let level = 0;

// // Attach keypress listener to the document for wider scope
// document.addEventListener("keypress", () => {
//   if (!start) {
//     start = true;
//     level = 0; // Reset level for a new game
//     gamesq = []; // Reset game sequence
//     mysq = []; // Reset user sequence
//     levelup();
//   }
// });

// // Function to flash a button
// function btnflash(btn) {
//   btn.classList.add("flash");
//   setTimeout(() => {
//     btn.classList.remove("flash");
//   }, 250);
// }

// // Function to handle level up and generate the next sequence
// function levelup() {
//   let temp = document.querySelector("h3");
//   temp.innerText = `Score: ${++level}`; // Increment level and update score
//   let v = Math.floor(Math.random() * 4);
//   let v2 = col[v]; // Select a random color
//   let v3 = document.querySelector(`#${v2}`);
//   gamesq.push(v2); // Add the random button to the game's sequence
//   flashSequence();
// }

// // Function to flash the entire sequence for the current level
// function flashSequence() {
//   let i = 0;
//   const interval = setInterval(() => {
//     let btnId = gamesq[i];
//     let btn = document.querySelector(`#${btnId}`);
//     btnflash(btn);
//     i++;
//     if (i >= gamesq.length) {
//       clearInterval(interval);
//     }
//   }, 600); // Delay between flashes
// }

// // Add event listeners to all buttons for user input
// let allbtn = document.querySelectorAll(".same");
// allbtn.forEach((btn) => {
//   btn.addEventListener("click", (e) => {
//     let clickedBtn = e.target.id;
//     mysq.push(clickedBtn); // Add user click to their sequence
//     btnflash(e.target); // Flash the clicked button
//     checkSequence(); // Check if the user is following the sequence correctly
//   });
// });

// // Function to check the user's input
// function checkSequence() {
//   let currentIndex = mysq.length - 1;
//   if (mysq[currentIndex] !== gamesq[currentIndex]) {
//     // If user input is incorrect
//     document.querySelector("h3").innerText = "Game Over! Press Any Key to Restart";
//     start = false; // Reset game
//   } else if (mysq.length === gamesq.length) {
//     // If the user completes the current sequence
//     mysq = []; // Reset user sequence
//     setTimeout(levelup, 1000); // Proceed to the next level
//   }
// }


const colors = ["green", "red", "blue", "yellow"];
let gameSequence = [];
let playerSequence = [];
let level = 0;

// DOM elements
const message = document.getElementById("message");
const startButton = document.getElementById("start");
const buttons = document.querySelectorAll(".btn");

// Helper function to flash a button
function flashButton(color) {
  const button = document.getElementById(color);
  button.classList.add("active");
  setTimeout(() => button.classList.remove("active"), 500);
}

// Play the game sequence
function playSequence() {
  playerSequence = [];
  let i = 0;

  const interval = setInterval(() => {
    flashButton(gameSequence[i]);
    i++;
    if (i >= gameSequence.length) clearInterval(interval);
  }, 1000);
}

// Start a new level
function nextLevel() {
  level++;
  message.textContent = `Level ${level}`;
  const randomColor = colors[Math.floor(Math.random() * colors.length)];
  gameSequence.push(randomColor);
  playSequence();
}

// Handle player clicks
function handlePlayerClick(color) {
  playerSequence.push(color);
  flashButton(color);

  // Check if the player's input matches the game sequence
  const currentIndex = playerSequence.length - 1;
  if (playerSequence[currentIndex] !== gameSequence[currentIndex]) {
    message.textContent = "Game Over! Click Start to try again.";
    resetGame();
    return;
  }

  // If the player matches the sequence, move to the next level
  if (playerSequence.length === gameSequence.length) {
    setTimeout(nextLevel, 1000);
  }
}

// Reset the game
function resetGame() {
  gameSequence = [];
  playerSequence = [];
  level = 0;
}

// Add event listeners
buttons.forEach((button) => {
  button.addEventListener("click", (e) => handlePlayerClick(e.target.id));
});

startButton.addEventListener("click", () => {
  resetGame();
  nextLevel();
});